{"ast":null,"code":"const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'htttps://www.baidu.com';\nexport async function request(url, data = {}, options = {}) {\n  // 拼接\n  url = baseUrl + url;\n\n  if (options.method) {\n    options.method = options.method.toLowerCase();\n  }\n\n  if (options.method === 'get' || options.get === undefined) {\n    let parms = [];\n\n    for (const key in data) {\n      parms.push(`${key}=${data[key]}`);\n    }\n\n    url = url + (url.includes('?') ? '&' : '?') + parms.join('&');\n  } // 如果是post或其他请求,接收数据是body\n  else if (['post', 'put', 'patch'].includes(options.method)) {\n      data = JSON.stringify(data);\n      options.headers['content-type'] = 'application/json'; // \n    }\n\n  return await fetch(url, { ...options,\n    data\n  }).then(res => res.json()); // console.log('result',result)\n} // 增加\n\nexport function post(url, data = {}, options = {}) {\n  return request(url, data = {}, options = {\n    method: 'post'\n  });\n} // 删除\n\nexport function remove(url, data = {}, options = {}) {\n  return request(url, data = {}, options = {\n    method: 'delete'\n  });\n} // 修改\n\nexport function put(url, data = {}, options = {}) {\n  return request(url, data = {}, options = {\n    method: 'put'\n  });\n} // 查询\n\nexport function get(url, data = {}, options = {}) {\n  return request(url, data = {}, options = {\n    method: 'get'\n  });\n}\nexport function patch(url, data = {}, options = {}) {\n  return request(url, data = {}, options = {\n    method: 'patch'\n  });\n}\nexport default {\n  request,\n  get,\n  post,\n  put,\n  patch,\n  remove\n};","map":{"version":3,"sources":["D:/phpstudy_pro/WWW/react/xiangmu/meiliwan/src/utils/http.js"],"names":["baseUrl","process","env","NODE_ENV","request","url","data","options","method","toLowerCase","get","undefined","parms","key","push","includes","join","JSON","stringify","headers","fetch","then","res","json","post","remove","put","patch"],"mappings":"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","sourcesContent":["const baseUrl=process.env.NODE_ENV === 'development' ? 'http://localhost:3000' :'htttps://www.baidu.com'\r\nexport async function request (url,data={},options={}){\r\n    // 拼接\r\n    url=baseUrl+url;\r\n    if(options.method){\r\n        options.method = options.method.toLowerCase();\r\n    }\r\n    if(options.method === 'get' || options.get===undefined){\r\n        let parms=[]\r\n        for(const key in data){\r\n            parms.push(`${key}=${data[key]}`)\r\n        }\r\n        url=url+(url.includes('?')?'&':'?')+parms.join('&')\r\n    }\r\n    // 如果是post或其他请求,接收数据是body\r\n    else if(['post','put','patch'].includes(options.method)){\r\n        data=JSON.stringify(data);\r\n        options.headers['content-type']='application/json';\r\n            // \r\n    }\r\n    return await fetch(url,{\r\n        ...options,\r\n        data,\r\n       \r\n    }).then(res=>res.json());\r\n        // console.log('result',result)\r\n}\r\n\r\n// 增加\r\nexport function post(url,data={},options={}){\r\n    return request(url,data={},options={method:'post'})\r\n}\r\n// 删除\r\nexport function remove(url,data={},options={}){\r\n    return request(url,data={},options={method:'delete'})\r\n}\r\n// 修改\r\nexport function put(url,data={},options={}){\r\n    return request(url,data={},options={method:'put'})\r\n}\r\n// 查询\r\nexport function get(url,data={},options={}){\r\n    return request(url,data={},options={method:'get'})\r\n}\r\nexport function patch(url,data={},options={}){\r\n    return request(url,data={},options={method:'patch'})\r\n}\r\n\r\nexport default {\r\n    request,\r\n    get,\r\n    post,\r\n    put,\r\n    patch,\r\n    remove\r\n}"]},"metadata":{},"sourceType":"module"}